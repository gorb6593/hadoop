package mapred.exam.stock.multiple;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.output.MultipleOutputs;

public class StockMultipleReducer 
	extends Reducer<Text, IntWritable, Text, IntWritable>{
	IntWritable resulVal = new IntWritable(); //출력값
	Text resultkey = new Text(); //출력키
	MultipleOutputs<Text, IntWritable> multiOut;
	@Override
	protected void setup(Reducer<Text, IntWritable, Text, IntWritable>.Context context)
			throws IOException, InterruptedException {
		multiOut = new MultipleOutputs<Text, IntWritable>(context);
	}	
	@Override
	protected void reduce(Text key, Iterable<IntWritable> values,
			Reducer<Text, IntWritable, Text, IntWritable>.Context context) 
					throws IOException, InterruptedException {
		int sum = 0;
		for(IntWritable value:values) {
			sum = sum + value.get();
		}
		resulVal.set(sum);
		context.write(key, resulVal);
		
	}
	@Override
	protected void cleanup(Reducer<Text, IntWritable, Text, IntWritable>.Context context)
			throws IOException, InterruptedException {
		multiOut.close();
	}

	
	
	
}
