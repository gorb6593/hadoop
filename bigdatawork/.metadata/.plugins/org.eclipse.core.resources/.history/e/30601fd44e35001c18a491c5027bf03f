[보조정렬]
=> 기존의 맵리듀스에서 정렬되는 기본 키 방식과 다르게 정렬 기준을 추가해서 정렬
=> 보조정렬은 키 값을 그룹핑하고 그룹핑된 레코드에 순서를 부여하면서 정렬하는 방식

1. 사용자정의 키를 작성 
   - 복합키 구현
   - 클래스가 사용자정의 키
   - 정렬할 기준을 컴럼으로 갖고 있는 객체
   - 맵리듀스 프레임워크 내부에서 key와 value는 네트워크에서 주고 받는 값이므로 Writable타입이어야 한다.
   																--------
   																하둡내부에서 네트워크 전송을 위해
   																가능하도록 만들어진 타입
   																주고받을 키와 value의 데이터타입이 모두
   																Writable의 하위클래스
	1) WritableComparable상속
	2) 비교기준을 멤버변수로 정의
	3) 데이터를 쓰고 읽는 작업을 처리하기 위해 메소드 오버라이딩
	   - 네트워크를 통해서 키가 전송되므로 사용자정의 키가 네트워크로 전송될 수 있도록 보내고 받는 작업을 처리
	     이는 하둡의 맵리듀스 프레임워크 내부에서 지원하는 기능을 활용(WritableUtils)
	   - readFields오버라이딩
	     데이터를 읽기(역직렬화)
	   - write오버라이딩
	     데이터를 쓰기(직렬화)
	   - compareTo
	   	 순서를 정하기 위해서 커스텀키들을 비교해야 함(year와 month를 기준을 정해서 비교)
	   	 compareTo메소드 안에 정의 
2. Mapper작성하기
   => 사용자키가 outputkey로 출력될 수 있도록 정의
3. Partitioner를 정의
   => Reduce태스크에 분배할 수 있는 Partitioner를 정의
   => 같은 키를 갖고 있는 Mapper의 출력데이터를 같은 리듀스태스크로 보내기 위해서 해시코드를 이용해서 계산
   1) Partitioner상속
      => Partitioner의 역할을 하기 위해서 상속
      => 프레임워크 내부에서 호출될 수 있도록 하려면 Partitioner를 상속
      => year를 기준으로 같은 year를 갖고 있는 데이터를 같은 리듀서에서 작업이 진행되도록 분배
      => 같은 것끼리 메모리버퍼에 쌓았다가 한번에 전송
4. Reducer태스크로 보내기 전에 같은 그룹으로 그룹핑을 할 수 있도록 객체를 정의
   => 그룹키비교기
   => ex) air데이터에서 같은 년도별로 데이터를 분류
5. 4번에서 같은 그룹으로 정의한 데이터 내부에서 두 번째 기준을 적용해서 비교할 수 있도록 객체를 정의	      																
									  ---------
									  기준이 많으면 모두 비교할 수 있도록 구현
   => 1번에서 정의한 복합키를 기준으로 데이터를 정렬하기 위해 사용하는 객체
   => 복합키비교기(복합키에 정의한 모든 기준을 비교검토할 수 있도록 처리)
6. 리듀서
7. 드라이버